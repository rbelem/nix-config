# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "thunderbolt" "nvme" "usbhid" "usb_storage" "sd_mod" "rtsx_usb_sdmmc" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/93ef5a4d-6ffb-49b0-8dc3-307105961945";
      fsType = "btrfs";
      options = [ "subvol=rootfs" "compress=lzo" ];
    };

  fileSystems."/nix" =
    { device = "/dev/disk/by-uuid/93ef5a4d-6ffb-49b0-8dc3-307105961945";
      fsType = "btrfs";
      options = [ "subvol=nix" "compress=lzo" "noatime" ];
    };

  fileSystems."/snapshots" =
    { device = "/dev/disk/by-uuid/93ef5a4d-6ffb-49b0-8dc3-307105961945";
      fsType = "btrfs";
      options = [ "subvol=snapshots" "compress=lzo" "noatime" ];
    };

  fileSystems."/swap" =
    { device = "/dev/disk/by-uuid/93ef5a4d-6ffb-49b0-8dc3-307105961945";
      fsType = "btrfs";
      options = [ "subvol=swap" "noatime" ];
    };

  fileSystems."/var/cache" =
    { device = "/dev/disk/by-uuid/93ef5a4d-6ffb-49b0-8dc3-307105961945";
      fsType = "btrfs";
      options = [ "subvol=varcache" "compress=lzo" "noatime" ];
    };

  fileSystems."/var/log" =
    { device = "/dev/disk/by-uuid/93ef5a4d-6ffb-49b0-8dc3-307105961945";
      fsType = "btrfs";
      options = [ "subvol=varlog" "compress=lzo" "noatime" ];
    };

  fileSystems."/var/tmp" =
    { device = "/dev/disk/by-uuid/93ef5a4d-6ffb-49b0-8dc3-307105961945";
      fsType = "btrfs";
      options = [ "subvol=vartmp" "compress=lzo" "noatime" ];
    };

  fileSystems."/var/lib/systemd/coredump" =
    { device = "/dev/disk/by-uuid/93ef5a4d-6ffb-49b0-8dc3-307105961945";
      fsType = "btrfs";
      options = [ "subvol=systemdcoredump" "compress=lzo" "noatime" ];
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/0035-9EE8";
      fsType = "vfat";
    };

  fileSystems."/home" =
    { device = "/dev/disk/by-uuid/35de4991-aab4-43a5-ba5f-aa91b9f730fc";
      fsType = "btrfs";
      options = [ "subvol=homefs" "compress=lzo" ];
    };

  fileSystems."/home/rodrigo/.cache" =
    { device = "/dev/disk/by-uuid/35de4991-aab4-43a5-ba5f-aa91b9f730fc";
      fsType = "btrfs";
      options = [ "subvol=.cache" "compress=lzo" "noatime" ];
    };

  fileSystems."/home/rodrigo/.var/cache" =
    { device = "/dev/disk/by-uuid/35de4991-aab4-43a5-ba5f-aa91b9f730fc";
      fsType = "btrfs";
      options = [ "subvol=.varcache" "compress=lzo" "noatime" ];
    };

  swapDevices = [{
    device = "/swap/swapfile";
    size = (1024 * 16) + (1024 * 2); # RAM size + 2 GB
  }];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlo1.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  powerManagement.cpuFreqGovernor = lib.mkDefault "powersave";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
